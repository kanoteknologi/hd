{
 "swagger": "2.0",
 "info": {
  "title": "swgen2",
  "description": "Swagger document generated by hd",
  "version": "1.0.0"
 },
 "basePath": "/",
 "host": "localhost:36900",
 "schemes": [
  "http",
  "https"
 ],
 "definitions": {
  "SAddress": {
   "type": "object",
   "properties": {
    "Address": {
     "type": "string"
    },
    "AddressType": {
     "type": "string"
    },
    "ID": {
     "type": "integer",
     "format": "int64"
    },
    "PersonID": {
     "type": "integer",
     "format": "int64"
    }
   }
  },
  "SPerson": {
   "type": "object",
   "properties": {
    "_id": {
     "type": "integer",
     "format": "int64"
    },
    "name": {
     "type": "string"
    }
   }
  }
 },
 "paths": {
  "/classic": {
   "post": {
    "produces": [
     "application/json"
    ],
    "consumes": [
     "application/json"
    ],
    "parameters": [
     {
      "name": "body",
      "description": "body",
      "in": "body",
      "schema": {
       "type": "string"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "schema": {
       "type": "string"
      }
     },
     "500": {
      "description": "Error",
      "schema": {}
     }
    },
    "x-unique-id": "func(*kaos.Context, string) (string, error)"
   }
  },
  "/nk/api1": {
   "get": {
    "parameters": [
     {
      "name": "id",
      "description": "id of data",
      "in": "query",
      "type": "string"
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "schema": {}
     }
    }
   }
  },
  "/nk/classic": {
   "post": {
    "description": "non kaos function",
    "responses": {
     "200": {
      "description": "Success",
      "schema": {}
     }
    }
   }
  },
  "/obj/DeletePerson": {
   "post": {
    "produces": [
     "application/json"
    ],
    "consumes": [
     "application/json"
    ],
    "parameters": [
     {
      "name": "body",
      "description": "body",
      "in": "body",
      "schema": {
       "type": "object",
       "$ref": "#/definitions/SPerson"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "schema": {
       "$ref": "#/definitions/SPerson"
      }
     },
     "500": {
      "description": "Error",
      "schema": {}
     }
    },
    "x-unique-id": "func(*kaos.Context, *hd_test.SPerson) (*hd_test.SPerson, error)"
   }
  },
  "/obj/SaveAddress": {
   "post": {
    "description": "save person address",
    "produces": [
     "application/json"
    ],
    "consumes": [
     "application/json"
    ],
    "parameters": [
     {
      "name": "body",
      "description": "body",
      "in": "body",
      "schema": {
       "type": "object",
       "$ref": "#/definitions/SAddress"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "schema": {
       "$ref": "#/definitions/SAddress"
      }
     },
     "500": {
      "description": "Error",
      "schema": {}
     }
    },
    "x-unique-id": "func(*kaos.Context, *hd_test.SAddress) (*hd_test.SAddress, error)"
   }
  },
  "/obj/SavePerson": {
   "post": {
    "description": "save a person into database",
    "produces": [
     "application/json"
    ],
    "consumes": [
     "application/json"
    ],
    "parameters": [
     {
      "name": "body",
      "description": "body",
      "in": "body",
      "schema": {
       "type": "object",
       "$ref": "#/definitions/SPerson"
      }
     }
    ],
    "responses": {
     "200": {
      "description": "Success",
      "schema": {
       "$ref": "#/definitions/SPerson"
      }
     },
     "500": {
      "description": "Error",
      "schema": {}
     }
    },
    "x-unique-id": "func(*kaos.Context, *hd_test.SPerson) (*hd_test.SPerson, error)"
   }
  }
 }
}